#root {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  cursor: auto;
}

.main-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.main-container-dark-theme {
  background-color: #333;
}

.dark-primary-color          { background-color: #0288D1; }
.default-primary-color       { background-color: #03A9F4; }
.light-primary-color         { background-color: #B3E5FC; }
.text-primary-color          { color: #FFFFFF; }
.accent-color                { background-color: #8BC34A; }
.dark-accent-color           { background-color: #689F38; }
.primary-text-color          { color: #212121; }
.secondary-text-color        { color: #757575; }
.divider-color               { border-color: #BDBDBD; }
.secondary-accent-color      { background-color: #E91E63; }
.dark-secondary-accent-color { background-color: #C2185B; }

#navbar {
  background-color: #0288D1;
  position: inherit;
}

.content-container {
  flex: 1;
  display: flex;
  height: 100%;
  color: #FFFFFF;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
}

.control-panel-left {
  flex: 1;
  background-color: #03A9F4;
  overflow-y: auto;
}

.control-panel-left .control-panel-text {
  margin-top: 10px;
}

.center-container {
  flex: 3;
  -webkit-box-shadow: inset 0 0 12px black;
  -moz-box-shadow: inset 0 0 12px black;
  box-shadow: inset 0 0 12px black;
  position: relative;
  overflow: hidden; /* TODO move context menu to appear fully on screen */
  outline: none;
}

.center-container-dark-theme {
  background-color: #333;
}

.page-container {
  width: 50%;
  margin: 20px auto;
}

.page-container > *:not(:last-child) {
  margin-bottom: 10px;
}

.control-panel-text {
  text-align: center;
  margin-top: 10px;
}

.editable-main-container {
  width: 100%;
  display: flex;
}

.editable-container {
  width: 100%;
}

.editable {
  text-align: center;
  background-color: inherit;
}

.transition-table {
  display: inline-table;
  margin-bottom: 10px;
}

.transition-table td {
  border: 1px solid white;
  padding: 5px;
  min-width: 21px; /* TODO put whitespace in instead? */
}

.transition-table tr :first-child, .transition-table thead {
  font-weight: bold;
}

.state {
  background-color: #8BC34A;
  width: 40px;
  height: 40px;
  text-align: center;
  -webkit-border-radius: 20px;
  -moz-border-radius: 20px;
  border-radius: 20px;
  font-size: 20px;
  line-height: 40px;
  box-shadow: 1px 1px 10px black;
  position: absolute;
  cursor: pointer;
  z-index: 1;
}

/*
.state:hover {
  background-color: #E91E63;
}
*/

/*
.state:hover {
  / background-color: #689F38; /
}

.selected-state {
  background-color: #E91E63;
}

.selected-state:active {
  cursor: grab;
}

.selected-state:hover {
  / background-color: #C2185B; /
}
*/

.state-child {
  width: 36px;
  height: 36px;
  line-height: 36px;
  -webkit-border-radius: 18px;
  -moz-border-radius: 18px;
  border-radius: 18px;
  top: 2px;
  left: 2px;
  position: relative;
}

.state-child-accept {
  border: 2px solid #fff;
  line-height: 34px; /* TODO figure out why this is necessary for vertically centering text */
}

.ui.dropdown.context-menu {
  position: absolute;
}

.clickable-icon {
  cursor: pointer;
}

.popup {
  position: absolute;
  background-color: #03A9F4;
  box-shadow: 1px 1px 10px black;
  width: 70%;
  left: 15%;
  transition: margin-top .2s;
  padding: 20px;
  z-index: 5;
}

.popup > :not(:last-child) {
  margin-bottom: 10px;
}

.popup-hidden {
  margin-top: -20%; /* TODO figure out a non-hacky way to hide the popup */
}

#arrows-svg {
  width: 100%;
  height: 100%;
  position: absolute;
  pointer-events: none
}

.centered-element {
  margin: auto;
}

.regex-input-container {
  display: flex;
}

.regex-input-container > * {
  margin: 0 5px;
}

.regex-input {
  flex: 1;
}

.ui.input.regex-input > input {
  text-align: center;
}